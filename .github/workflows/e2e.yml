name: E2E Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose the environment"
        required: true
        default: "staging"
        type: choice
        options:
          - production
          - staging
  schedule:
    - cron: "*/30 * * * *"
  issue_comment:
    types: [edited]

jobs:
  monitor:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - env: production
            deployment_target: "Production - e2e"
          - env: staging
            deployment_target: "Staging - e2e"
          - env: preview
            deployment_target: "Preview - e2e"

    if: >
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == matrix.env) ||
      (github.event_name == 'issue_comment' && matrix.env == 'preview' && github.event.issue.pull_request != null)

    environment: ${{ matrix.deployment_target }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Capture Vercel Preview URL
        if: github.event_name == 'issue_comment' && matrix.env == 'preview'
        uses: aaimio/vercel-preview-url-action@v2.2.0
        id: preview
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set TEST_APP_URL from preview URL
        if: github.event_name == 'issue_comment' && matrix.env == 'preview'
        run: echo "TEST_APP_URL=${{ steps.preview.outputs.vercel_preview_url }}" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --filter app-e2e...

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-

      - name: Install Playwright Browsers and Dependencies
        run: pnpm --filter app-e2e exec playwright install --with-deps chrome

      - name: Run Playwright tests for ${{ matrix.env }}
        id: playwright
        env:
          TEST_APP_URL: ${{ env.TEST_APP_URL }}
        run: pnpm --filter app-e2e test:prod
        continue-on-error: true

      - name: Upload test screenshots for ${{ matrix.env }}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots-${{ matrix.env }}
          path: apps/app-e2e/screenshots/
          retention-days: 14

      - name: Fail workflow if tests failed for ${{ matrix.env }}
        if: steps.playwright.outcome == 'failure'
        run: |
          echo "::error::Playwright tests failed for the ${{ matrix.env }} environment."
          exit 1
